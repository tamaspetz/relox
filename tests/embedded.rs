#[cfg(any(feature = "embedded", feature = "embedded_minimal"))]
#[test]
fn test_elf32_relocate() {
    use relox::elf32_relocate;

    const CREL1: [u8; 31] = [
        0x00, 0x08, 0x00, 0x40, 0x01, 0x02, 0x18, 0x00, 0x10, 0x08, 0x08, 0x08, 0x10, 0x08, 0x08,
        0x10, 0x08, 0x08, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x08, 0x08, 0x08, 0x08, 0x10, 0x10,
        0x10,
    ];

    const ADDR1: [u32; 24] = [
        0x40000800, 0x40000810, 0x40000818, 0x40000820, 0x40000828, 0x40000838, 0x40000840,
        0x40000848, 0x40000858, 0x40000860, 0x40000868, 0x40000878, 0x40000888, 0x40000898,
        0x400008a8, 0x400008b8, 0x400008c8, 0x400008d0, 0x400008d8, 0x400008e0, 0x400008e8,
        0x400008f8, 0x40000908, 0x40000918,
    ];

    let mut index = 0;
    elf32_relocate(&CREL1, &mut |relocation_type, address| {
        assert_eq!(relocation_type, 0x02);
        assert_eq!(address, ADDR1[index]);
        index += 1;
        Ok(())
    })
    .unwrap();
}
